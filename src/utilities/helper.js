// Generated by purs bundle 0.13.8
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];                
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();                                                                                                   
  var fromRight = function (dictPartial) {
      return function (v) {
          if (v instanceof Right) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Either (line 261, column 1 - line 261, column 52): " + [ v.constructor.name ]);
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["fromRight"] = fromRight;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS);
(function(exports) {
  "use strict";

  exports.regexImpl = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.test = function (r) {
    return function (s) {
      var lastIndex = r.lastIndex;
      var result = r.test(s);
      r.lastIndex = lastIndex;
      return result;
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign.regexImpl(Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["match"] = match;
  exports["test"] = $foreign.test;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  var global = new RegexFlags({
      global: true,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["noFlags"] = noFlags;
  exports["global"] = global;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.Regex.Unsafe"] = $PS["Data.String.Regex.Unsafe"] || {};
  var exports = $PS["Data.String.Regex.Unsafe"];
  var Data_Either = $PS["Data.Either"];
  var Data_String_Regex = $PS["Data.String.Regex"];                
  var unsafeRegex = function (s) {
      return function (f) {
          return Data_Either.fromRight()(Data_String_Regex.regex(s)(f));
      };
  };
  exports["unsafeRegex"] = unsafeRegex;
})(PS);
(function(exports) {
  'use strict'

  exports.replaceWith = (decl) => (value) => decl.replaceWith(value)
})(PS["ReplaceWith"] = PS["ReplaceWith"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["ReplaceWith"] = $PS["ReplaceWith"] || {};
  var exports = $PS["ReplaceWith"];
  var $foreign = $PS["ReplaceWith"];
  exports["replaceWith"] = $foreign.replaceWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Helper"] = $PS["Helper"] || {};
  var exports = $PS["Helper"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var Data_String_Regex_Unsafe = $PS["Data.String.Regex.Unsafe"];
  var ReplaceWith = $PS["ReplaceWith"];                
  var valueRegex = Data_String_Regex_Unsafe.unsafeRegex("\\d[\\w%]*")(Data_String_Regex_Flags.global);
  var getValues = function (str) {
      return Data_String_Regex.match(valueRegex)(str);
  };
  var getDeclValue = function (v) {
      return v.value;
  };
  var getDeclProp = function (v) {
      return v.prop;
  };
  var createFallback = function (decl) {
      return function (v) {
          if (v.fallback === "minmax") {
              return ReplaceWith.replaceWith(decl)("font-size: hello;");
          };
          if (v.fallback === "media") {
              return ReplaceWith.replaceWith(decl)("font-size: world;");
          };
          return decl;
      };
  };
  var clampRegex = Data_String_Regex_Unsafe.unsafeRegex("^clamp")(Data_String_Regex_Flags.noFlags);
  var hasClamp = function (str) {
      return Data_String_Regex.test(clampRegex)(str);
  };
  var filterDeclByValue = function (decl) {
      return function (option) {
          var $7 = hasClamp(getDeclValue(decl));
          if ($7) {
              return createFallback(decl)(option);
          };
          return decl;
      };
  };
  exports["clampRegex"] = clampRegex;
  exports["valueRegex"] = valueRegex;
  exports["hasClamp"] = hasClamp;
  exports["getValues"] = getValues;
  exports["getDeclValue"] = getDeclValue;
  exports["getDeclProp"] = getDeclProp;
  exports["filterDeclByValue"] = filterDeclByValue;
  exports["createFallback"] = createFallback;
})(PS);
module.exports = PS["Helper"];
